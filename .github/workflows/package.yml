name: Publish NuGet Packages (External Repo)

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build-and-publish:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout workflow repo
      uses: actions/checkout@v3

    - name: Checkout trino-csharp-client repo
      uses: actions/checkout@v3
      with:
        repository: trinodb/trino-csharp-client
        path: trino-csharp-client

    - name: List files
      run: ls -R ${{ github.workspace }}

    - name: Setup .NET SDK
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '7.0.x'

    - name: Restore dependencies
      working-directory: ${{ github.workspace }}/trino-csharp-client/src
      run: dotnet restore TrinoDriver.sln

    - name: Build solution
      working-directory: ${{ github.workspace }}/trino-csharp-client/src
      run: dotnet build TrinoDriver.sln --configuration Release --no-restore

    - name: Pack projects
      working-directory: ${{ github.workspace }}/trino-csharp-client/src
      run: |
        dotnet pack Trino.Client/Trino.Client.csproj -c Release -o ./nupkg --no-build /p:Version=${{ github.ref_name || '1.0.0-local' }}
        dotnet pack Trino.Data.ADO/Trino.Data.ADO.csproj -c Release -o ./nupkg --no-build /p:Version=${{ github.ref_name || '1.0.0-local' }}
        dotnet pack Trino.Client.Auth/Trino.Client.Auth.csproj -c Release -o ./nupkg --no-build /p:Version=${{ github.ref_name || '1.0.0-local' }}

    - name: Push packages to NuGet.org
      working-directory: ${{ github.workspace }}/trino-csharp-client/src/nupkg
      env:
        NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}
      run: |
        for pkg in *.nupkg; do
          echo "Pushing $pkg"
          dotnet nuget push "$pkg" --api-key $NUGET_API_KEY --source https://api.nuget.org/v3/index.json
        done
